//! `SeaORM` Entity, @generated by sea-orm-codegen 1.1.12

use sea_orm::entity::prelude::*;
use serde::{Deserialize, Serialize};

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Serialize, Deserialize)]
#[sea_orm(table_name = "wm_sol_transaction")]
#[serde(rename_all = "camelCase")]
pub struct Model {
    #[sea_orm(primary_key)]
    pub id: i64,
    pub created_at: Option<DateTime>,
    pub updated_at: Option<DateTime>,
    pub deleted_at: Option<DateTime>,
    #[sea_orm(primary_key, auto_increment = false)]
    pub create_time: DateTime,
    pub mint: String,
    pub curve: String,
    pub signature: String,
    pub signer: String,
    #[sea_orm(column_type = "Double")]
    pub token_amount: f64,
    #[sea_orm(column_type = "Double")]
    pub sol_amount: f64,
    #[sea_orm(column_type = "Double")]
    pub new_price_usd: f64,
    #[sea_orm(column_type = "Double")]
    pub new_price_sol: f64,
    pub price_usd: String,
    pub is_buy: bool,
    #[sea_orm(column_type = "Double")]
    pub volume_usd: f64,
    pub slot: String,
    #[sea_orm(column_type = "Double")]
    pub pnl: f64,
    pub transfer_type: i16,
    pub ecosystem: String,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {}

impl ActiveModelBehavior for ActiveModel {}
